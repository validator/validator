<!--
Copyright (c) 2013-2020 Mozilla Foundation

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
-->
<project name="html5-validator" basedir=".." default="build"
  xmlns:artifact="antlib:org.apache.maven.artifact.ant">
  <tstamp/>
  <property name="dist" location="build/dist" />
  <property name="jarsDir" location="jars" />
  <property name="depsDir" location="dependencies" />
  <loadfile property="version" srcfile="${dist}/VERSION" failonerror="false" />
  <loadresource property="version.number">
    <string value="${version}"/>
    <filterchain>
      <tokenfilter>
        <replaceregex pattern="^([^ ]+).*$" replace="\1"/>
      </tokenfilter>
    </filterchain>
  </loadresource>
  <property name="build.java.target.version" value="8" />
  <property name="version" value="nightly-${DSTAMP}" />
  <property name="groupId" value="nu.validator" />
  <property name="artifactId" value="validator" />
  <property name="src" location="src" />
  <property name="javadoc-dir" value="${dist}/javadoc" />
  <property name="validator-jar" value="${dist}/${artifactId}-${version.number}.jar" />
  <property name="validator-javadoc-jar" value="${dist}/${artifactId}-${version.number}-javadoc.jar" />
  <property name="validator-sources-jar" value="${dist}/${artifactId}-${version.number}-sources.jar" />
  <property name="validator-bundle-jar" value="${dist}/${artifactId}-${version.number}-bundle.jar" />

  <macrodef name="get-and-checksum">
    <attribute name="url"/>
    <attribute name="destdir" default="${depsDir}"/>
    <attribute name="skipexisting" default="true"/>
    <attribute name="verbose" default="false"/>
    <attribute name="checksum.skip" default="false"/>
    <attribute name="checksum.pattern" default="{0}"/>
    <sequential>
      <local name="basename"/>
      <basename property="basename" file="@{url}"/>
      <mkdir dir="@{destdir}"/>

      <get dest="@{destdir}" skipexisting="@{skipexisting}" verbose="@{verbose}">
        <url url="@{url}"/>
        <url url="@{url}.sha1"/>
        <firstmatchmapper>
          <globmapper from="@{url}.sha1" to="${basename}.sha1"/>
          <globmapper from="@{url}" to="${basename}"/>
        </firstmatchmapper>
      </get>

      <local name="checksum.matches"/>
      <local name="checksum.matches.fail"/>
      <checksum file="@{destdir}/${basename}" algorithm="sha" fileext=".sha1"
                verifyproperty="checksum.matches"
                pattern="@{checksum.pattern}"/>
      <condition property="checksum.matches.fail">
        <and>
          <equals arg1="${checksum.matches}" arg2="false"/>
          <equals arg1="@{checksum.skip}" arg2="false"/>
        </and>
      </condition>
      <fail if="checksum.matches.fail">Checksum error on @{destdir}/${basename}</fail>
    </sequential>
  </macrodef>

  <property name="maven-ant-tasks-version" value="2.1.3" />
  <target name="dl-deps-antlib" unless="${offline}">
    <echo>Downloading dependencies (required antlib)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/${maven-ant-tasks-version}/maven-ant-tasks-${maven-ant-tasks-version}.jar"/>
    <taskdef uri="antlib:org.apache.maven.artifact.ant"
             resource="org/apache/maven/artifact/ant/antlib.xml"
             classpath="${depsDir}/maven-ant-tasks-${maven-ant-tasks-version}.jar"/>
  </target>

  <property name="extrasDir" value="extras" />
  <target name="dl-extras" unless="${offline}">
    <echo>Downloading dependencies (extras)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/log4j/apache-log4j-extras/1.2.17/apache-log4j-extras-1.2.17.jar" destdir="${extrasDir}"/>
  </target>

  <property name="jetty-version" value="11.0.20" />
  <target name="dl-deps-jetty" unless="${offline}">
    <echo>Downloading dependencies (jetty)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-http/${jetty-version}/jetty-http-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-io/${jetty-version}/jetty-io-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-security/${jetty-version}/jetty-security-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-server/${jetty-version}/jetty-server-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-servlet/${jetty-version}/jetty-servlet-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-servlets/${jetty-version}/jetty-servlets-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-util/${jetty-version}/jetty-util-${jetty-version}.jar"/>
  </target>

  <property name="commons-codec-version" value="1.15" />
  <property name="commons-fileupload-version" value="2.0.0-M2" />
  <property name="commons-io-version" value="2.15.1" />
  <property name="commons-logging-version" value="1.2" />
  <property name="httpclient-version" value="4.5.13" />
  <property name="httpcore-version" value="4.4.14" />
  <property name="icu4j-version" value="75.1" />
  <property name="jakarta.servlet-api-version" value="5.0.2" />
  <property name="javax.json-version" value="1.1.4" />
  <property name="jchardet-version" value="1.0" />
  <property name="log4j-version" value="1.2.17" />
  <property name="mail-version" value="1.4.7" />
  <property name="salvation-version" value="2.7.2" />
  <target name="dl-deps" unless="${offline}">
    <echo>Downloading dependencies</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/ibm/icu/icu4j/${icu4j-version}/icu4j-${icu4j-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/shapesecurity/salvation/${salvation-version}/salvation-${salvation-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-codec/commons-codec/${commons-codec-version}/commons-codec-${commons-codec-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/commons/commons-fileupload2-core/${commons-fileupload-version}/commons-fileupload2-core-${commons-fileupload-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/commons/commons-fileupload2-jakarta-servlet5/${commons-fileupload-version}/commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-io/commons-io/${commons-io-version}/commons-io-${commons-io-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}-adapters.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}-api.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/mail/mail/${mail-version}/mail-${mail-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/toolchain/jetty-jakarta-servlet-api/${jakarta.servlet-api-version}/jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/log4j/log4j/${log4j-version}/log4j-${log4j-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/net/sourceforge/jchardet/jchardet/${jchardet-version}/jchardet-${jchardet-version}.jar" checksum.pattern="{0} "/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/${httpclient-version}/httpclient-${httpclient-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/${httpcore-version}/httpcore-${httpcore-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/glassfish/javax.json/${javax.json-version}/javax.json-${javax.json-version}.jar"/>
  </target>

  <property name="avalon-framework-api-version" value="4.3.1" />
  <property name="avalon-logkit-version" value="2.2.1" />
  <property name="cdi-api-version" value="2.0" />
  <property name="el-api-version" value="2.2" />
  <property name="javax-activation-version" value="1.2.0" />
  <property name="javax-inject-version" value="1" />
  <property name="javax-interceptor-api-version" value="1.2.2" />
  <property name="javax-jms-api-version" value="2.0.1" />
  <property name="jsr305-version" value="3.0.2" />
  <property name="portlet-api-version" value="3.0.1" />
  <property name="slf4j-api-version" value="1.7.29" />
  <property name="slf4j-log4j12-version" value="1.7.32" />
  <target name="dl-deps-modules" unless="${offline}">
    <echo>Downloading dependencies (modules dependencies)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/sun/activation/javax.activation/${javax-activation-version}/javax.activation-${javax-activation-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/avalon/framework/avalon-framework-api/${avalon-framework-api-version}/avalon-framework-api-${avalon-framework-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/avalon/logkit/avalon-logkit/${avalon-logkit-version}/avalon-logkit-${avalon-logkit-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/enterprise/cdi-api/${cdi-api-version}/cdi-api-${cdi-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/el/el-api/${el-api-version}/el-api-${el-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/activation/javax.activation-api/${javax-activation-version}/javax.activation-api-${javax-activation-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/inject/javax.inject/${javax-inject-version}/javax.inject-${javax-inject-version}.jar" checksum.pattern="{0} "/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/interceptor/javax.interceptor-api/${javax-interceptor-api-version}/javax.interceptor-api-${javax-interceptor-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/jms/javax.jms-api/${javax-jms-api-version}/javax.jms-api-${javax-jms-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-jmx/${jetty-version}/jetty-jmx-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/${jsr305-version}/jsr305-${jsr305-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/portlet/portlet-api/${portlet-api-version}/portlet-api-${portlet-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/slf4j/slf4j-api/${slf4j-api-version}/slf4j-api-${slf4j-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/${slf4j-log4j12-version}/slf4j-log4j12-${slf4j-log4j12-version}.jar"/>
  </target>

  <target name="build" depends="jar"/>
  <target name="clean">
    <delete dir="${dist}"/>
  </target>
  <target name="distclean"
          depends="galimatias-clean,
          htmlparser-clean,
          langdetect-clean,
          validator-clean,
          css-validator-clean,
          jing-clean"/>
  <target name="jar" depends="validator-jar">
    <jar destfile="${dist}/vnu.jar" duplicate="preserve">
      <zipgroupfileset dir="${jarsDir}" includes="*.jar"/>
      <zipfileset src="css-validator/css-validator.jar"/>
      <zipfileset src="jing-trang/build/jing.jar"/>
      <zipfileset src="jing-trang/lib/saxon9.jar"/>
      <zipfileset src="${depsDir}/commons-codec-${commons-codec-version}.jar"/>
      <zipfileset src="${depsDir}/commons-fileupload2-core-${commons-fileupload-version}.jar"/>
      <zipfileset src="${depsDir}/commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar"/>
      <zipfileset src="${depsDir}/commons-io-${commons-io-version}.jar"/>
      <zipfileset src="${depsDir}/commons-logging-${commons-logging-version}.jar"/>
      <zipfileset src="${depsDir}/commons-logging-${commons-logging-version}-adapters.jar"/>
      <zipfileset src="${depsDir}/commons-logging-${commons-logging-version}-api.jar"/>
      <zipfileset src="${depsDir}/httpclient-${httpclient-version}.jar"/>
      <zipfileset src="${depsDir}/httpcore-${httpcore-version}.jar"/>
      <zipfileset src="${depsDir}/icu4j-${icu4j-version}.jar"/>

      <zipfileset src="${depsDir}/jchardet-${jchardet-version}.jar"/>
      <zipfileset src="${depsDir}/jetty-http-${jetty-version}.jar">
        <exclude name="module-info.class" />
        <exclude name="META-INF/services/**"/>
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-io-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-security-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-server-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-servlet-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-servlets-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-util-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/javax.json-${javax.json-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/log4j-${log4j-version}.jar"/>
      <zipfileset src="${depsDir}/salvation-${salvation-version}.jar"/>
      <!-- module dependencies -->
      <zipfileset src="jing-trang/lib/isorelax.jar"/>
      <zipfileset src="${depsDir}/avalon-framework-api-${avalon-framework-api-version}.jar"/>
      <zipfileset src="${depsDir}/avalon-logkit-${avalon-logkit-version}.jar"/>
      <zipfileset src="${depsDir}/cdi-api-${cdi-api-version}.jar"/>
      <zipfileset src="${depsDir}/el-api-${el-api-version}.jar"/>
      <zipfileset src="${depsDir}/javax.activation-${javax-activation-version}.jar"/>
      <zipfileset src="${depsDir}/javax.inject-${javax-inject-version}.jar"/>
      <zipfileset src="${depsDir}/javax.interceptor-api-${javax-interceptor-api-version}.jar"/>
      <zipfileset src="${depsDir}/javax.jms-api-${javax-jms-api-version}.jar"/>
      <zipfileset src="${depsDir}/jetty-jmx-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jsr305-${jsr305-version}.jar"/>
      <zipfileset src="${depsDir}/mail-${mail-version}.jar"/>
      <zipfileset src="${depsDir}/portlet-api-${portlet-api-version}.jar"/>
      <zipfileset src="${depsDir}/slf4j-api-${slf4j-api-version}.jar"/>
      <zipfileset src="${depsDir}/slf4j-log4j12-${slf4j-log4j12-version}.jar"/>
      <manifest>
        <attribute name="Main-Class" value="nu.validator.client.SimpleCommandLineValidator"/>
        <attribute name="Implementation-Title" value="The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
      <service type="org.relaxng.datatype.DatatypeLibraryFactory">
        <provider classname="com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl"/>
        <provider classname="nu.validator.datatype.Html5DatatypeLibraryFactory"/>
      </service>
    </jar>
  </target>
  <target name="war" depends="validator-jar">
    <mkdir dir="${dist}/war" />
    <echo file="${dist}/war/web.xml" append="false"
><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">
    <display-name>validator.nu</display-name>
    <description>Mark-up validation service</description>
    <filter>
        <filter-name>inbound-size-limit-filter</filter-name>
        <filter-class>nu.validator.servlet.InboundSizeLimitFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>inbound-size-limit-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>inbound-gzip-filter</filter-name>
        <filter-class>nu.validator.servlet.InboundGzipFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>inbound-gzip-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>multipart-form-data-filter</filter-name>
        <filter-class>nu.validator.servlet.MultipartFormDataFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>multipart-form-data-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>validator</servlet-name>
        <servlet-class>nu.validator.servlet.VerifierServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>validator</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
</web-app>
]]></echo>
    <echo file="${dist}/war/log4j.xml" append="false"
><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
  <appender name="console" class="org.apache.log4j.ConsoleAppender">
    <param name="Target" value="System.out"/>
    <layout class="org.apache.log4j.PatternLayout">
      <param name="ConversionPattern" value="%-5p %c{1} - %m%n"/>
    </layout>
  </appender>

  <root>
    <priority value ="info" />
    <appender-ref ref="console" />
  </root>

</log4j:configuration>
]]></echo>
    <unzip dest="${dist}/war/classes">
      <fileset dir="${jarsDir}">
        <include name="*.jar"/>
      </fileset>
    </unzip>
    <copy todir="${dist}/war/lib">
      <fileset file="css-validator/css-validator.jar"/>
      <fileset file="jing-trang/build/jing.jar"/>
      <fileset file="jing-trang/lib/saxon9.jar"/>
      <fileset file="${depsDir}/commons-codec-${commons-codec-version}.jar"/>
      <fileset file="${depsDir}/commons-fileupload2-core-${commons-fileupload-version}.jar"/>
      <fileset file="${depsDir}/commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar"/>
      <fileset file="${depsDir}/commons-io-${commons-io-version}.jar"/>
      <fileset file="${depsDir}/commons-logging-${commons-logging-version}.jar"/>
      <fileset file="${depsDir}/commons-logging-${commons-logging-version}-adapters.jar"/>
      <fileset file="${depsDir}/commons-logging-${commons-logging-version}-api.jar"/>
      <fileset file="${depsDir}/httpclient-${httpclient-version}.jar"/>
      <fileset file="${depsDir}/httpcore-${httpcore-version}.jar"/>
      <fileset file="${depsDir}/icu4j-${icu4j-version}.jar"/>
      <fileset file="${depsDir}/salvation-${salvation-version}.jar"/>
      <fileset file="${depsDir}/jchardet-${jchardet-version}.jar"/>
      <fileset file="${depsDir}/log4j-${log4j-version}.jar"/>
      <fileset file="${depsDir}/slf4j-api-${slf4j-api-version}.jar"/>
      <fileset file="${depsDir}/javax.json-${javax.json-version}.jar"/>
      <fileset file="${depsDir}/jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar"/>
    </copy>
    <war destfile="${dist}/vnu.war" webxml="${dist}/war/web.xml">
      <lib dir="${dist}/war/lib"/>
      <classes dir="${dist}/war/classes">
        <exclude name="**/*.java"/>
        <exclude name="**/nu/validator/servlet/Main.class"/>
      </classes>
      <classes file="${dist}/war/log4j.xml"/>
      <service type="org.relaxng.datatype.DatatypeLibraryFactory">
        <provider classname="com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl"/>
        <provider classname="nu.validator.datatype.Html5DatatypeLibraryFactory"/>
      </service>
    </war>
    <delete dir="${dist}/war" />
  </target>

  <path id="validator.classpath">
    <fileset dir="${depsDir}/" includes="commons-fileupload2-core-${commons-fileupload-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-io-${commons-io-version}.jar" />
    <fileset dir="${depsDir}/" includes="httpclient-${httpclient-version}.jar" />
    <fileset dir="${depsDir}/" includes="httpcore-${httpcore-version}.jar" />
    <fileset dir="${depsDir}/" includes="icu4j-${icu4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="javax.json-${javax.json-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-server-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-servlet-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-util-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="log4j-${log4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="salvation-${salvation-version}.jar" />
    <pathelement location="css-validator/css-validator.jar"/>
    <pathelement location="${jarsDir}/galimatias.jar"/>
    <pathelement location="${jarsDir}/htmlparser.jar"/>
    <pathelement location="${jarsDir}/langdetect.jar"/>
    <pathelement location="jing-trang/build/jing.jar"/>
  </path>

  <property name="validator.basedir" location="" />
  <target name="validator-prepare">
    <mkdir dir="${validator.basedir}/classes"/>
    <copy todir="${validator.basedir}/classes" preservelastmodified="true">
      <fileset dir="${validator.basedir}/src">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>
  <target name="validator-emitters" depends="validator-prepare">
    <mkdir dir="${validator.basedir}/classesSaxCompiler"/>
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.basedir}/classesSaxCompiler"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           includes="nu/validator/xml/SaxCompiler.java"
           nowarn="true"
           release="${build.java.target.version}"
           />
    <java classpath="${validator.basedir}/classesSaxCompiler"
          classname="nu.validator.xml.SaxCompiler">
      <arg file="${validator.basedir}/site/PageEmitter.xml"/>
      <arg file="${validator.basedir}/src/nu/validator/servlet/PageEmitter.java"/>
    </java>
    <java classpath="${validator.basedir}/classesSaxCompiler"
          classname="nu.validator.xml.SaxCompiler">
      <arg file="${validator.basedir}/site/FormEmitter.xml"/>
      <arg file="${validator.basedir}/src/nu/validator/servlet/FormEmitter.java"/>
    </java>
  </target>
  <target name="validator-build"
          depends="validator-prepare,
          validator-emitters,
          langdetect-jar,
          htmlparser-jar,
          galimatias-jar,
          htmlparser-jar,
          jing-build,
          css-validator-build">
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.basedir}/classes"
           classpathref="validator.classpath"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           />
  </target>
  <target name="validator-clean">
    <delete dir="${validator.basedir}/classes"/>
    <delete dir="${validator.basedir}/classesSaxCompiler"/>
    <delete file="${jarsDir}/validator.jar"/>
    <delete file="${validator.basedir}/src/nu/validator/servlet/PageEmitter.java" verbose="true"/>
    <delete file="${validator.basedir}/src/nu/validator/servlet/FormEmitter.java" verbose="true"/>
  </target>
  <target name="validator-jar" depends="validator-build">
    <mkdir dir="${validator.basedir}/jars"/>
    <jar destfile="${jarsDir}/validator.jar" basedir="${validator.basedir}/classes" excludes="**/*.java"/>
  </target>

  <target name="validator-javadoc-jar">
    <property name="javadoc-dir" value="${dist}/javadoc" />
    <javadoc destdir="${javadoc-dir}" additionalparam="-Xdoclint:none" classpathref="validator.classpath">
      <fileset dir="${src}">
        <exclude name="META-INF/**"/>
        <exclude name="nu/validator/datatype/data/encodings.json"/>
        <exclude name="nu/validator/datatype/data/generate-encoding-data.py"/>
        <exclude name="nu/validator/datatype/Pattern.java"/>
        <exclude name="nu/validator/gnu/xml/aelfred2/COPYING"/>
        <exclude name="nu/validator/gnu/xml/aelfred2/README"/>
        <exclude name="nu/validator/gnu/xml/aelfred2/package.html"/>
        <exclude name="nu/validator/localentities/files/**"/>
      </fileset>
    </javadoc>
    <jar destfile="${validator-javadoc-jar}">
      <fileset dir="${javadoc-dir}" />
    </jar>
    <delete dir="${javadoc-dir}"/>
  </target>
  <target name="validator-sources-jar">
    <jar destfile="${validator-sources-jar}">
      <fileset dir="${src}"/>
    </jar>
  </target>
  <target name="validator-artifacts" depends="dl-deps-antlib, validator-javadoc-jar, validator-sources-jar">
    <delete file="${dist}/VERSION" />
    <artifact:pom
      id="pom"
      groupId="nu.validator"
      artifactId="validator"
      version="${version.number}"
      name="The Nu Html Checker"
      description="An HTML-checking library (used by https://checker.html5.org/ and https://html5.validator.nu)"
      url="https://validator.github.io/validator/"
      packaging="jar">
      <license
        name="The MIT License"
        distribution="repo"
        url="https://raw.githubusercontent.com/validator/validator/main/LICENSE"/>
      <scm
        connection="scm:git:git://github.com/validator/validator.git"
        developerConnection="scm:git:git://github.com/validator/validator.git"
        url="https://github.com/validator/validator"/>
      <issueManagement
        system="GitHub Issues"
        url="https://github.com/validator/validator/issues"/>
      <ciManagement
        system="GitHub Actions"
        url="https://github.com/validator/validator/actions"/>
      <developer
        name="Henri Sivonen"
        id="hsivonen"
        email="hsivonen@iki.fi"
        url="https://hsivonen.iki.fi/"/>
      <developer
        name="Michael[tm] Smith"
        id="sideshowbarker"
        email="mike@w3.org"
        url="https://people.w3.org/mike/"/>
      <dependency groupId="com.ibm.icu" artifactId="icu4j" version="${icu4j-version}"/>
      <dependency groupId="com.shapesecurity" artifactId="salvation" version="${salvation-version}"/>
      <dependency groupId="commons-codec" artifactId="commons-codec" version="${commons-codec-version}"/>
      <dependency groupId="org.apache.commons" artifactId="commons-fileupload2-core" version="${commons-fileupload-version}"/>
      <dependency groupId="org.apache.commons" artifactId="commons-fileupload2-jakarta-servlet5" version="${commons-fileupload-version}"/>
      <dependency groupId="commons-io" artifactId="commons-io" version="${commons-io-version}"/>
      <dependency groupId="commons-logging" artifactId="commons-logging" version="${commons-logging-version}"/>
      <dependency groupId="isorelax" artifactId="isorelax" version="20030108"/>
      <dependency groupId="org.eclipse.jetty.toolchain" artifactId="jetty-jakarta-servlet-api" version="${jakarta.servlet-api-version}"/>
      <dependency groupId="log4j" artifactId="log4j" version="${log4j-version}"/>
      <dependency groupId="net.sf.saxon" artifactId="Saxon-HE" version="9.6.0-4"/>
      <dependency groupId="nu.validator" artifactId="langdetect" version="1.2"/>
      <dependency groupId="nu.validator" artifactId="galimatias" version="0.1.3"/>
      <dependency groupId="nu.validator" artifactId="htmlparser" version="1.4.16"/>
      <dependency groupId="nu.validator" artifactId="cssvalidator" version="1.0.8"/>
      <dependency groupId="nu.validator" artifactId="jing" version="20200702VNU"/>
      <dependency groupId="org.apache.httpcomponents" artifactId="httpclient" version="${httpclient-version}"/>
      <dependency groupId="org.apache.httpcomponents" artifactId="httpcore" version="${httpcore-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-http" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-io" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-security" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-server" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-servlets" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-util" version="${jetty-version}"/>
      <dependency groupId="org.glassfish" artifactId="javax.json" version="${javax.json-version}"/>
    </artifact:pom>
    <artifact:writepom pomRefId="pom" file="${dist}/validator-${version.number}.pom"/>
    <jar destfile="${validator-jar}" duplicate="preserve">
      <zipfileset src="${jarsDir}/validator.jar"/>
      <manifest>
        <attribute name="Implementation-Title" value="The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
      <service type="org.relaxng.datatype.DatatypeLibraryFactory">
        <provider classname="com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl"/>
        <provider classname="nu.validator.datatype.Html5DatatypeLibraryFactory"/>
      </service>
    </jar>
  </target>
  <target name="validator-bundle">
    <jar basedir="${dist}" destfile="${validator-bundle-jar}"/>
  </target>
  <import file=".ant/build-langdetect.xml"/>
  <import file=".ant/build-galimatias.xml"/>
  <import file=".ant/build-htmlparser.xml"/>
  <import file=".ant/build-cssvalidator.xml"/>
  <import file=".ant/build-jing.xml"/>


  <property name="jing.basedir" location="jing-trang" />
  <target name="jing-build">
    <ant dir="${jing.basedir}" antfile="build.xml" inheritAll="false"/>
  </target>
  <target name="jing-clean">
    <ant dir="${jing.basedir}" antfile="build.xml" target="clean" inheritAll="false"/>
    <delete file="${jing.basedir}/modbuild.xml"/>
    <delete file="${jing.basedir}/modules.xml"/>
  </target>


  <property name="css-validator.basedir" location="css-validator" />
  <target name="css-validator-build">
    <ant dir="${css-validator.basedir}" antfile="build.xml" target="jar-without-dependencies" inheritAll="false"/>
  </target>
  <target name="css-validator-clean">
    <ant dir="${css-validator.basedir}" antfile="build.xml" target="clean" inheritAll="false"/>
  </target>


  <property name="galimatias.basedir" location="galimatias" />
  <path id="galimatias.classpath">
    <fileset dir="${depsDir}/" includes="icu4j-${icu4j-version}.jar" />
  </path>
  <target name="galimatias-build">
    <mkdir dir="${galimatias.basedir}/classes"/>
    <javac srcdir="${galimatias.basedir}/src/main/java"
           destdir="${galimatias.basedir}/classes"
           classpathref="galimatias.classpath"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           />
  </target>
  <target name="galimatias-clean">
    <delete dir="${galimatias.basedir}/classes"/>
    <delete dir="${galimatias.basedir}/dist"/>
    <delete file="${jarsDir}/galimatias.jar"/>
  </target>
  <target name="galimatias-jar" depends="galimatias-build">
    <jar destfile="${jarsDir}/galimatias.jar" basedir="${galimatias.basedir}/classes"/>
  </target>


  <property name="htmlparser.basedir" location="htmlparser" />
  <path id="htmlparser.classpath">
    <fileset dir="${depsDir}/" includes="icu4j-${icu4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="jchardet-${jchardet-version}.jar" />
  </path>
  <target name="htmlparser-initialize">
    <!-- copied over from htmlparser/pom.xml -->
    <delete dir="${htmlparser.basedir}/build/realsrc"/>
    <mkdir dir="${htmlparser.basedir}/build/realsrc"/>
    <copy todir="${htmlparser.basedir}/build/realsrc" preservelastmodified="true">
      <fileset dir="${htmlparser.basedir}/src"/>
    </copy>
  </target>
  <target name="htmlparser-process-sources" depends="htmlparser-initialize">
    <!-- copied over from htmlparser/pom.xml -->
    <property name="translator.sources" value="${htmlparser.basedir}/translator-src"/>
    <property name="translator.classes" value="${htmlparser.basedir}/build/translator-classes"/>
    <mkdir dir="${translator.classes}"/>
    <javac srcdir="${translator.sources}" includes="nu/validator/htmlparser/generator/ApplyHotSpotWorkaround.java" destdir="${translator.classes}" includeantruntime="false"/>
    <java classname="nu.validator.htmlparser.generator.ApplyHotSpotWorkaround">
      <classpath>
        <pathelement location="${translator.classes}"/>
      </classpath>
      <arg value="${htmlparser.basedir}/build/realsrc/nu/validator/htmlparser/impl/Tokenizer.java"/>
      <arg value="${htmlparser.basedir}/build/realsrc/nu/validator/htmlparser/impl/HotSpotWorkaround.txt"/>
    </java>
  </target>
  <target name="htmlparser-build" depends="htmlparser-process-sources">
    <mkdir dir="${htmlparser.basedir}/build/classes"/>
    <javac srcdir="${htmlparser.basedir}/src"
           destdir="${htmlparser.basedir}/build/classes"
           classpathref="htmlparser.classpath"
           debug="true"
           encoding="UTF-8"
           excludes="nu/validator/htmlparser/xom/**"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           />
  </target>
  <target name="htmlparser-clean">
    <delete dir="${htmlparser.basedir}/build"/>
    <delete dir="${htmlparser.basedir}/dist"/>
    <delete file="${jarsDir}/htmlparser.jar"/>
  </target>
  <target name="htmlparser-jar" depends="htmlparser-build">
    <jar destfile="${jarsDir}/htmlparser.jar" basedir="${htmlparser.basedir}/build/classes"/>
  </target>


  <property name="langdetect.basedir" location="langdetect" />
  <path id="langdetect.classpath">
    <fileset dir="${depsDir}/" includes="javax.json-${javax.json-version}.jar" />
  </path>
  <target name="langdetect-build">
    <mkdir dir="${langdetect.basedir}/classes"/>
    <javac srcdir="${langdetect.basedir}/src"
           destdir="${langdetect.basedir}/classes"
           classpathref="langdetect.classpath"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           />
  </target>
  <target name="langdetect-clean">
    <delete dir="${langdetect.basedir}/classes"/>
    <delete dir="${langdetect.basedir}/dist"/>
    <delete file="${jarsDir}/langdetect.jar"/>
  </target>
  <target name="langdetect-jar" depends="langdetect-build">
    <copy file="${langdetect.basedir}/src/com/cybozu/labs/langdetect/util/messages.properties" todir="${langdetect.basedir}/classes/com/cybozu/labs/langdetect/util"/>
      <jar destfile="${jarsDir}/langdetect.jar" basedir="${langdetect.basedir}/classes"/>
  </target>

</project>
