<!--
Copyright (c) 2013-2020 Mozilla Foundation

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
-->
<project name="html5-validator" basedir=".." default="build"
  xmlns:artifact="antlib:org.apache.maven.artifact.ant">
  <tstamp/>
  <property name="dist" location="build/dist" />
  <property name="jarsDir" location="jars" />
  <property name="depsDir" location="dependencies" />
  <loadresource property="version.number">
    <string value="${version}"/>
    <filterchain>
      <tokenfilter>
        <replaceregex pattern="^([^ ]+).*$" replace="\1"/>
      </tokenfilter>
    </filterchain>
  </loadresource>
  <property name="build.java.target.version" value="8" />
  <property name="version" value="nightly-${DSTAMP}" />
  <property name="groupId" value="nu.validator" />
  <property name="artifactId" value="validator" />
  <property name="src" location="src" />
  <property name="javadoc-dir" value="${dist}/javadoc" />
  <property name="validator-jar" value="${dist}/${artifactId}-${version.number}.jar" />
  <property name="validator-javadoc-jar" value="${dist}/${artifactId}-${version.number}-javadoc.jar" />
  <property name="validator-sources-jar" value="${dist}/${artifactId}-${version.number}-sources.jar" />
  <property name="validator-bundle-jar" value="${dist}/${artifactId}-${version.number}-bundle.jar" />

  <property name="validator.param.pageTemplate" value="site/PageEmitter.xml"/>
  <property name="validator.param.formTemplate" value="site/FormEmitter.xml"/>

  <echo>Version is set to ${version}</echo>

  <!-- Delete file and parent folder if it became empty -->
  <macrodef name="deleteFileWithEmptyParent">
    <attribute name="file"/>
      <sequential>
        <local name="parent"/>
        <dirname property="parent" file="@{file}"/>
        <echo>${parent} + @{file}</echo>
        <delete file="@{file}"/>
        <delete includeemptydirs="true" failonerror="false" quiet="true" verbose="true">
          <fileset dir="${parent}">
            <and>
              <size value="0"/>
              <type type="dir"/>
            </and>
          </fileset>
        </delete>
      </sequential>
  </macrodef>

  <macrodef name="get-and-checksum">
    <attribute name="url"/>
    <attribute name="destdir" default="${depsDir}"/>
    <attribute name="skipexisting" default="true"/>
    <attribute name="verbose" default="false"/>
    <attribute name="checksum.skip" default="false"/>
    <attribute name="checksum.pattern" default="{0}"/>
    <sequential>
      <local name="basename"/>
      <basename property="basename" file="@{url}"/>
      <mkdir dir="@{destdir}"/>

      <get dest="@{destdir}" skipexisting="@{skipexisting}" verbose="@{verbose}">
        <url url="@{url}"/>
        <url url="@{url}.sha1"/>
        <firstmatchmapper>
          <globmapper from="@{url}.sha1" to="${basename}.sha1"/>
          <globmapper from="@{url}" to="${basename}"/>
        </firstmatchmapper>
      </get>

      <local name="checksum.matches"/>
      <local name="checksum.matches.fail"/>
      <checksum file="@{destdir}/${basename}" algorithm="sha" fileext=".sha1"
                verifyproperty="checksum.matches"
                pattern="@{checksum.pattern}"/>
      <condition property="checksum.matches.fail">
        <and>
          <equals arg1="${checksum.matches}" arg2="false"/>
          <equals arg1="@{checksum.skip}" arg2="false"/>
        </and>
      </condition>
      <fail if="checksum.matches.fail">Checksum error on @{destdir}/${basename}</fail>
    </sequential>
  </macrodef>

  <property name="maven-ant-tasks-version" value="2.1.3" />
  <target name="dl-deps-antlib" unless="${offline}">
    <echo>Downloading dependencies (required antlib)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/${maven-ant-tasks-version}/maven-ant-tasks-${maven-ant-tasks-version}.jar"/>
    <taskdef uri="antlib:org.apache.maven.artifact.ant"
             resource="org/apache/maven/artifact/ant/antlib.xml"
             classpath="${depsDir}/maven-ant-tasks-${maven-ant-tasks-version}.jar"/>
  </target>

  <property name="jetty-version" value="11.0.20" />
  <target name="dl-deps-jetty" unless="${offline}">
    <echo>Downloading dependencies (jetty)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-http/${jetty-version}/jetty-http-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-io/${jetty-version}/jetty-io-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-security/${jetty-version}/jetty-security-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-server/${jetty-version}/jetty-server-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-servlet/${jetty-version}/jetty-servlet-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-servlets/${jetty-version}/jetty-servlets-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-util/${jetty-version}/jetty-util-${jetty-version}.jar"/>
  </target>

  <property name="commons-codec-version" value="1.15" />
  <property name="commons-fileupload-version" value="2.0.0-M2" />
  <property name="commons-io-version" value="2.15.1" />
  <property name="commons-logging-version" value="1.2" />
  <property name="httpclient-version" value="4.5.13" />
  <property name="httpcore-version" value="4.4.14" />
  <property name="icu4j-version" value="75.1" />
  <property name="jakarta.servlet-api-version" value="5.0.2" />
  <property name="javax.json-version" value="1.1.4" />
  <property name="jchardet-version" value="1.0" />
  <property name="log4j-version" value="1.2.17" />
  <property name="mail-version" value="1.4.7" />
  <property name="salvation-version" value="2.7.2" />
  <target name="dl-deps" unless="${offline}">
    <echo>Downloading dependencies</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/ibm/icu/icu4j/${icu4j-version}/icu4j-${icu4j-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/shapesecurity/salvation/${salvation-version}/salvation-${salvation-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-codec/commons-codec/${commons-codec-version}/commons-codec-${commons-codec-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/commons/commons-fileupload2-core/${commons-fileupload-version}/commons-fileupload2-core-${commons-fileupload-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/commons/commons-fileupload2-jakarta-servlet5/${commons-fileupload-version}/commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-io/commons-io/${commons-io-version}/commons-io-${commons-io-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}-adapters.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}-api.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/mail/mail/${mail-version}/mail-${mail-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/toolchain/jetty-jakarta-servlet-api/${jakarta.servlet-api-version}/jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/log4j/log4j/${log4j-version}/log4j-${log4j-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/net/sourceforge/jchardet/jchardet/${jchardet-version}/jchardet-${jchardet-version}.jar" checksum.pattern="{0} "/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/${httpclient-version}/httpclient-${httpclient-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/${httpcore-version}/httpcore-${httpcore-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/glassfish/javax.json/${javax.json-version}/javax.json-${javax.json-version}.jar"/>
  </target>

  <property name="avalon-framework-api-version" value="4.3.1" />
  <property name="avalon-logkit-version" value="2.2.1" />
  <property name="cdi-api-version" value="2.0" />
  <property name="el-api-version" value="2.2" />
  <property name="javax-activation-version" value="1.2.0" />
  <property name="javax-inject-version" value="1" />
  <property name="javax-interceptor-api-version" value="1.2.2" />
  <property name="javax-jms-api-version" value="2.0.1" />
  <property name="jsr305-version" value="3.0.2" />
  <property name="portlet-api-version" value="3.0.1" />
  <property name="slf4j-api-version" value="1.7.29" />
  <property name="slf4j-log4j12-version" value="1.7.32" />
  <target name="dl-deps-modules" unless="${offline}">
    <echo>Downloading dependencies (modules dependencies)</echo>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/sun/activation/javax.activation/${javax-activation-version}/javax.activation-${javax-activation-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/avalon/framework/avalon-framework-api/${avalon-framework-api-version}/avalon-framework-api-${avalon-framework-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/apache/avalon/logkit/avalon-logkit/${avalon-logkit-version}/avalon-logkit-${avalon-logkit-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/enterprise/cdi-api/${cdi-api-version}/cdi-api-${cdi-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/el/el-api/${el-api-version}/el-api-${el-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/activation/javax.activation-api/${javax-activation-version}/javax.activation-api-${javax-activation-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/inject/javax.inject/${javax-inject-version}/javax.inject-${javax-inject-version}.jar" checksum.pattern="{0} "/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/interceptor/javax.interceptor-api/${javax-interceptor-api-version}/javax.interceptor-api-${javax-interceptor-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/jms/javax.jms-api/${javax-jms-api-version}/javax.jms-api-${javax-jms-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-jmx/${jetty-version}/jetty-jmx-${jetty-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/${jsr305-version}/jsr305-${jsr305-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/javax/portlet/portlet-api/${portlet-api-version}/portlet-api-${portlet-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/slf4j/slf4j-api/${slf4j-api-version}/slf4j-api-${slf4j-api-version}.jar"/>
    <get-and-checksum url="https://repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/${slf4j-log4j12-version}/slf4j-log4j12-${slf4j-log4j12-version}.jar"/>
  </target>

  <target name="dl-clean">
    <echo>Remove ${depsDir}</echo>
    <delete dir="${depsDir}"/>
  </target>

  <target name="build" depends="jar"/>
  <target name="clean"
          depends="galimatias-clean,
          htmlparser-clean,
          langdetect-clean,
          validator-clean,
          cssvalidator-clean,
          jing-clean
          ">
    <delete dir="${dist}"/>
  </target>
  <target name="distclean" depends="clean, dl-clean"/>
  <target name="jar" depends="validator-jar">
    <jar destfile="${dist}/vnu.jar" duplicate="preserve">
      <zipgroupfileset dir="${jarsDir}" includes="*.jar"/>
      <zipfileset src="css-validator/css-validator.jar"/>
      <zipfileset src="jing-trang/build/jing.jar"/>
      <zipfileset src="jing-trang/lib/saxon9.jar"/>
      <zipfileset src="${depsDir}/commons-codec-${commons-codec-version}.jar"/>
      <zipfileset src="${depsDir}/commons-fileupload2-core-${commons-fileupload-version}.jar"/>
      <zipfileset src="${depsDir}/commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar"/>
      <zipfileset src="${depsDir}/commons-io-${commons-io-version}.jar"/>
      <zipfileset src="${depsDir}/commons-logging-${commons-logging-version}.jar"/>
      <zipfileset src="${depsDir}/commons-logging-${commons-logging-version}-adapters.jar"/>
      <zipfileset src="${depsDir}/commons-logging-${commons-logging-version}-api.jar"/>
      <zipfileset src="${depsDir}/httpclient-${httpclient-version}.jar"/>
      <zipfileset src="${depsDir}/httpcore-${httpcore-version}.jar"/>
      <zipfileset src="${depsDir}/icu4j-${icu4j-version}.jar"/>

      <zipfileset src="${depsDir}/jchardet-${jchardet-version}.jar"/>
      <zipfileset src="${depsDir}/jetty-http-${jetty-version}.jar">
        <exclude name="module-info.class" />
        <exclude name="META-INF/services/**"/>
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-io-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-security-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-server-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-servlet-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-servlets-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jetty-util-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/javax.json-${javax.json-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/log4j-${log4j-version}.jar"/>
      <zipfileset src="${depsDir}/salvation-${salvation-version}.jar"/>
      <!-- module dependencies -->
      <zipfileset src="jing-trang/lib/isorelax.jar"/>
      <zipfileset src="${depsDir}/avalon-framework-api-${avalon-framework-api-version}.jar"/>
      <zipfileset src="${depsDir}/avalon-logkit-${avalon-logkit-version}.jar"/>
      <zipfileset src="${depsDir}/cdi-api-${cdi-api-version}.jar"/>
      <zipfileset src="${depsDir}/el-api-${el-api-version}.jar"/>
      <zipfileset src="${depsDir}/javax.activation-${javax-activation-version}.jar"/>
      <zipfileset src="${depsDir}/javax.inject-${javax-inject-version}.jar"/>
      <zipfileset src="${depsDir}/javax.interceptor-api-${javax-interceptor-api-version}.jar"/>
      <zipfileset src="${depsDir}/javax.jms-api-${javax-jms-api-version}.jar"/>
      <zipfileset src="${depsDir}/jetty-jmx-${jetty-version}.jar">
        <exclude name="module-info.class" />
      </zipfileset>
      <zipfileset src="${depsDir}/jsr305-${jsr305-version}.jar"/>
      <zipfileset src="${depsDir}/mail-${mail-version}.jar"/>
      <zipfileset src="${depsDir}/portlet-api-${portlet-api-version}.jar"/>
      <zipfileset src="${depsDir}/slf4j-api-${slf4j-api-version}.jar"/>
      <zipfileset src="${depsDir}/slf4j-log4j12-${slf4j-log4j12-version}.jar"/>
      <manifest>
        <attribute name="Main-Class" value="nu.validator.client.SimpleCommandLineValidator"/>
        <attribute name="Implementation-Title" value="The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
      <service type="org.relaxng.datatype.DatatypeLibraryFactory">
        <provider classname="com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl"/>
        <provider classname="nu.validator.datatype.Html5DatatypeLibraryFactory"/>
      </service>
    </jar>
  </target>
  <target name="war" depends="validator-jar">
    <mkdir dir="${dist}/war" />
    <echo file="${dist}/war/web.xml" append="false"
><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">
    <display-name>validator.nu</display-name>
    <description>Mark-up validation service</description>
    <filter>
        <filter-name>inbound-size-limit-filter</filter-name>
        <filter-class>nu.validator.servlet.InboundSizeLimitFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>inbound-size-limit-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>inbound-gzip-filter</filter-name>
        <filter-class>nu.validator.servlet.InboundGzipFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>inbound-gzip-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>multipart-form-data-filter</filter-name>
        <filter-class>nu.validator.servlet.MultipartFormDataFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>multipart-form-data-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>validator</servlet-name>
        <servlet-class>nu.validator.servlet.VerifierServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>validator</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
</web-app>
]]></echo>
    <echo file="${dist}/war/log4j.xml" append="false"
><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
  <appender name="console" class="org.apache.log4j.ConsoleAppender">
    <param name="Target" value="System.out"/>
    <layout class="org.apache.log4j.PatternLayout">
      <param name="ConversionPattern" value="%-5p %c{1} - %m%n"/>
    </layout>
  </appender>

  <root>
    <priority value ="info" />
    <appender-ref ref="console" />
  </root>

</log4j:configuration>
]]></echo>
    <unzip dest="${dist}/war/classes">
      <fileset dir="${jarsDir}">
        <include name="*.jar"/>
      </fileset>
    </unzip>
    <copy todir="${dist}/war/lib">
      <fileset file="css-validator/css-validator.jar"/>
      <fileset file="jing-trang/build/jing.jar"/>
      <fileset file="jing-trang/lib/saxon9.jar"/>
      <fileset file="${depsDir}/commons-codec-${commons-codec-version}.jar"/>
      <fileset file="${depsDir}/commons-fileupload2-core-${commons-fileupload-version}.jar"/>
      <fileset file="${depsDir}/commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar"/>
      <fileset file="${depsDir}/commons-io-${commons-io-version}.jar"/>
      <fileset file="${depsDir}/commons-logging-${commons-logging-version}.jar"/>
      <fileset file="${depsDir}/commons-logging-${commons-logging-version}-adapters.jar"/>
      <fileset file="${depsDir}/commons-logging-${commons-logging-version}-api.jar"/>
      <fileset file="${depsDir}/httpclient-${httpclient-version}.jar"/>
      <fileset file="${depsDir}/httpcore-${httpcore-version}.jar"/>
      <fileset file="${depsDir}/icu4j-${icu4j-version}.jar"/>
      <fileset file="${depsDir}/salvation-${salvation-version}.jar"/>
      <fileset file="${depsDir}/jchardet-${jchardet-version}.jar"/>
      <fileset file="${depsDir}/log4j-${log4j-version}.jar"/>
      <fileset file="${depsDir}/slf4j-api-${slf4j-api-version}.jar"/>
      <fileset file="${depsDir}/javax.json-${javax.json-version}.jar"/>
      <fileset file="${depsDir}/jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar"/>
    </copy>
    <war destfile="${dist}/vnu.war" webxml="${dist}/war/web.xml">
      <lib dir="${dist}/war/lib"/>
      <classes dir="${dist}/war/classes">
        <exclude name="**/*.java"/>
        <exclude name="**/nu/validator/servlet/Main.class"/>
      </classes>
      <classes file="${dist}/war/log4j.xml"/>
      <service type="org.relaxng.datatype.DatatypeLibraryFactory">
        <provider classname="com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl"/>
        <provider classname="nu.validator.datatype.Html5DatatypeLibraryFactory"/>
      </service>
    </war>
    <delete dir="${dist}/war" />
  </target>

  <property name="validator.basedir" location="." />
  <property name="validator.build.basedir" location="build/validator" />
  <path id="validator.classpath">
    <fileset dir="${depsDir}/" includes="commons-fileupload2-core-${commons-fileupload-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-io-${commons-io-version}.jar" />
    <fileset dir="${depsDir}/" includes="httpclient-${httpclient-version}.jar" />
    <fileset dir="${depsDir}/" includes="httpcore-${httpcore-version}.jar" />
    <fileset dir="${depsDir}/" includes="icu4j-${icu4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="javax.json-${javax.json-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-server-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-servlet-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-util-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="log4j-${log4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="salvation-${salvation-version}.jar" />
    <pathelement location="css-validator/css-validator.jar"/>
    <pathelement location="${jarsDir}/galimatias.jar"/>
    <pathelement location="${jarsDir}/htmlparser.jar"/>
    <pathelement location="${jarsDir}/langdetect.jar"/>
    <pathelement location="jing-trang/build/jing.jar"/>
  </path>

  <target name="validator-prepare" depends="dl-entities, localentities-build">
    <mkdir dir="${validator.build.basedir}/full/classes"/>
    <copy todir="${validator.build.basedir}/full/classes" preservelastmodified="true">
      <fileset dir="${validator.basedir}/src">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <mkdir dir="${validator.build.basedir}/core/classes"/>
    <copy todir="${validator.build.basedir}/core/classes" preservelastmodified="true">
      <fileset dir="${validator.basedir}/src">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="validator-emitters" depends="validator-prepare">
    <mkdir dir="${validator.build.basedir}/saxCompiler/classes"/>
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.build.basedir}/saxCompiler/classes"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           includes="nu/validator/xml/SaxCompiler.java"
           nowarn="true"
           release="${build.java.target.version}"
           />
    <java classpath="${validator.build.basedir}/saxCompiler/classes"
          classname="nu.validator.xml.SaxCompiler">
      <arg file="${validator.param.pageTemplate}"/>
      <arg file="${validator.basedir}/src/nu/validator/servlet/PageEmitter.java"/>
    </java>
    <java classpath="${validator.build.basedir}/saxCompiler/classes"
          classname="nu.validator.xml.SaxCompiler">
      <arg file="${validator.param.formTemplate}"/>
      <arg file="${validator.basedir}/src/nu/validator/servlet/FormEmitter.java"/>
    </java>
  </target>

  <target name="validator-build"
          depends="validator-prepare,
          validator-emitters,
          cssvalidator-build,
          galimatias-jar,
          htmlparser-jar,
          jing-build,
          langdetect-jar,
          dl-deps,
          dl-deps-modules,
          dl-deps-jetty">
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.build.basedir}/full/classes"
           classpathref="validator.classpath"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           />
  </target>

  <target name="validator-split-core"
          depends="validator-prepare,
          validator-emitters,
          cssvalidator-build,
          galimatias-jar,
          htmlparser-jar,
          jing-build,
          langdetect-jar,
          dl-deps,
          dl-deps-modules">
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.build.basedir}/core/classes"
           classpathref="validator-split-core.classpath"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           >
      <exclude name="**/servlet/Main.java" />
    </javac>
  </target>


  <path id="validator-split-core.classpath">
    <!-- This should be the same as validator.classpath but without jetty -->
    <fileset dir="${depsDir}/" includes="commons-fileupload2-core-${commons-fileupload-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-fileupload2-jakarta-servlet5-${commons-fileupload-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-io-${commons-io-version}.jar" />
    <fileset dir="${depsDir}/" includes="httpclient-${httpclient-version}.jar" />
    <fileset dir="${depsDir}/" includes="httpcore-${httpcore-version}.jar" />
    <fileset dir="${depsDir}/" includes="icu4j-${icu4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="javax.json-${javax.json-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar" />
    <!-- Since core doesn't contain the jetty server, there should be no jetty* here except the servlet-api -->
    <fileset dir="${depsDir}/" includes="log4j-${log4j-version}.jar" />
    <fileset dir="${depsDir}/" includes="salvation-${salvation-version}.jar" />
    <pathelement location="css-validator/css-validator.jar"/>
    <pathelement location="${jarsDir}/galimatias.jar"/>
    <pathelement location="${jarsDir}/htmlparser.jar"/>
    <pathelement location="${jarsDir}/langdetect.jar"/>
    <pathelement location="jing-trang/build/jing.jar"/>
  </path>

  <path id="validator-split-core.runtime.classpath">
    <!-- The ones required for a simple run of vnu-core.jar -->
    <fileset dir="${depsDir}/" includes="commons-logging-${commons-logging-version}.jar" />
    <fileset dir="${depsDir}/" includes="commons-logging-${commons-logging-version}-adaptesr.jar" />
    <fileset dir="${depsDir}/" includes="commons-logging-${commons-logging-version}-api.jar" />
  </path>

  <target name="validator-split-core-jar" depends="validator-split-core">
    <jar destfile="${validator.build.basedir}/vnu-core.jar"
         basedir="${validator.build.basedir}/core/classes"
         >
      <fileset dir="${validator.build.basedir}/resources"/>
      <manifest>
        <attribute name="Main-Class" value="nu.validator.client.SimpleCommandLineValidator"/>
        <attribute name="Implementation-Title" value="Core &amp; CLI of The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
    </jar>
  </target>

  <target name="validator-split-core-jar-run" depends="validator-split-core-jar">
    <tempfile property="temp.html.file" destdir="${validator.build.basedir}" prefix="minDoc" suffix=".html" deleteonexit="true"/>
    <echo file="${temp.html.file}">
      &lt;!doctype html&gt;&lt;html lang=""&gt;&lt;meta charset=utf-8&gt;&lt;title&gt;test&lt;/title&gt;
    </echo>
    <java classname="nu.validator.client.SimpleCommandLineValidator" fork="true" failonerror="true">
      <classpath>
        <path refid="validator-split-core.classpath"/>
        <path refid="validator-split-core.runtime.classpath"/>
        <path location="${validator.build.basedir}/vnu-core.jar"/>
      </classpath>
      <arg value="--verbose"/>
      <arg value="${temp.html.file}"/>
    </java>
  </target>


  <path id="validator-split-server.classpath">
    <fileset dir="${depsDir}/" includes="jetty-jakarta-servlet-api-${jakarta.servlet-api-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-server-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-servlet-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="jetty-util-${jetty-version}.jar" />
    <fileset dir="${depsDir}/" includes="log4j-${log4j-version}.jar" />
    <pathelement path="${validator.build.basedir}/core/classes/"/>
  </path>

  <path id="validator-split-server.runtime.classpath">
    <!-- The ones required for a simple run of vnu-server.jar -->
    <pathelement location="${depsDir}/jetty-http-${jetty-version}.jar" />
    <pathelement location="${depsDir}/jetty-io-${jetty-version}.jar" />
    <pathelement location="${depsDir}/jetty-security-${jetty-version}.jar" />
    <pathelement location="${depsDir}/slf4j-api-${slf4j-api-version}.jar"/>
    <pathelement location="${depsDir}/slf4j-log4j12-${slf4j-log4j12-version}.jar"/>
  </path>

  <target name="validator-split-server"
          depends="validator-split-core, dl-deps-jetty">
    <mkdir dir="${validator.build.basedir}/server/classes"/>
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.build.basedir}/server/classes"
           classpathref="validator-split-server.classpath"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           >
        <include name="**/servlet/Main.java" />
      </javac>
  </target>

  <target name="validator-split-server-jar" depends="validator-split-server">
    <jar destfile="${validator.build.basedir}/vnu-server.jar"
         basedir="${validator.build.basedir}/server/classes"
         >
      <manifest>
        <attribute name="Main-Class" value="nu.validator.servlet.Main"/>
        <attribute name="Implementation-Title" value="Standalone server of The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
    </jar>
  </target>

  <target name="validator-split-server-jar-run" depends="validator-split-server-jar">
    <java classname="nu.validator.servlet.Main" fork="true" failonerror="true">
      <classpath>
        <path refid="validator-split-server.classpath"/>
        <path refid="validator-split-server.runtime.classpath"/>
        <path refid="validator-split-core.classpath"/>
        <path refid="validator-split-core.runtime.classpath"/>
        <path refid="validator.classpath"/>
        <path location="${validator.build.basedir}/vnu-server.jar"/>
      </classpath>
    </java>
  </target>


  <target name="validator-split-client">
    <mkdir dir="${validator.build.basedir}/client/classes"/>
    <javac srcdir="${validator.basedir}/src"
           destdir="${validator.build.basedir}/client/classes"
           debug="true"
           encoding="UTF-8"
           includeantruntime="false"
           nowarn="true"
           release="${build.java.target.version}"
           >
      <include name="nu/validator/client/HttpClient.java" />
    </javac>
  </target>

  <target name="validator-split-client-jar" depends="validator-split-client">
    <jar destfile="${validator.build.basedir}/vnu-client.jar"
         basedir="${validator.build.basedir}/client/classes"
         >
      <manifest>
        <attribute name="Main-Class" value="nu.validator.client.HttpClient"/>
        <attribute name="Implementation-Title" value="HTTP Client for The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
    </jar>
  </target>

  <target name="validator-split-client-jar-run" depends="validator-split-client-jar">
    <tempfile property="temp.html.file" destdir="${validator.build.basedir}" prefix="minDoc" suffix=".html" deleteonexit="true"/>
    <echo file="${temp.html.file}">
      &lt;!doctype html&gt;&lt;html lang=""&gt;&lt;meta charset=utf-8&gt;&lt;title&gt;test&lt;/title&gt;
    </echo>
    <java jar="${validator.build.basedir}/vnu-client.jar" fork="true" failonerror="true">
<!--       <sysproperty key="nu.validator.client.port" value="8080"/> -->
<!--       <sysproperty key="nu.validator.client.path" value="/vnu"/> -->
      <arg value="${temp.html.file}"/>
    </java>
  </target>

  <target name="validator-merge-split" depends="validator-split-core, validator-split-client, validator-split-server">
    <delete dir="${validator.build.basedir}/merged-split"/>
    <mkdir dir="${validator.build.basedir}/merged-split"/>
    <copy todir="${validator.build.basedir}/merged-split">
      <fileset dir="${validator.build.basedir}/core"/>
      <fileset dir="${validator.build.basedir}/client"/>
      <fileset dir="${validator.build.basedir}/server"/>
    </copy>
  </target>

  <target name="validator-compare-full-and-merged-split" depends="validator-merge-split, validator-build">
    <exec osfamily="unix" executable="diff" failonerror="true">
      <arg value="-r"></arg>
      <arg value="${validator.build.basedir}/full"></arg>
      <arg value="${validator.build.basedir}/merged-split"></arg>
    </exec>
  </target>

  <target name="validator-clean">
    <delete dir="${validator.build.basedir}"/>
    <deleteFileWithEmptyParent file="${jarsDir}/validator.jar"/>
    <delete dir="build/schema"/>
    <delete file="${validator.basedir}/src/nu/validator/servlet/PageEmitter.java" verbose="true"/>
    <delete file="${validator.basedir}/src/nu/validator/servlet/FormEmitter.java" verbose="true"/>
    <delete>
      <!-- remove all files except those matching www_w3_org* -->
      <fileset dir="${validator.basedir}/src/nu/validator/localentities/files">
        <exclude name="www_w3_org*"/>
      </fileset>
      <!-- remove all directories -->
      <dirset dir="${validator.basedir}/src/nu/validator/localentities/files"/>
    </delete>
  </target>

  <target name="validator-jar" depends="validator-build">
    <mkdir dir="${validator.basedir}/jars"/>
    <jar destfile="${jarsDir}/validator.jar" basedir="${validator.build.basedir}/full/classes" excludes="**/*.java">
      <fileset dir="${validator.build.basedir}/resources"/>
    </jar>
  </target>

  <target name="validator-javadoc-jar"
          depends="
          cssvalidator-build,
          galimatias-jar,
          htmlparser-jar,
          jing-build,
          langdetect-jar,
          dl-deps,
          dl-deps-modules,
          dl-deps-jetty">
    <property name="javadoc-dir" value="${dist}/javadoc" />
    <javadoc destdir="${javadoc-dir}" additionalparam="-Xdoclint:none" classpathref="validator.classpath">
      <fileset dir="${src}">
        <exclude name="META-INF/**"/>
        <exclude name="nu/validator/datatype/data/encodings.json"/>
        <exclude name="nu/validator/datatype/data/generate-encoding-data.py"/>
        <exclude name="nu/validator/datatype/Pattern.java"/>
        <exclude name="nu/validator/gnu/xml/aelfred2/COPYING"/>
        <exclude name="nu/validator/gnu/xml/aelfred2/README"/>
        <exclude name="nu/validator/gnu/xml/aelfred2/package.html"/>
        <exclude name="nu/validator/localentities/files/**"/>
      </fileset>
    </javadoc>
    <jar destfile="${validator-javadoc-jar}">
      <fileset dir="${javadoc-dir}" />
    </jar>
    <delete dir="${javadoc-dir}"/>
  </target>
  <target name="validator-sources-jar">
    <jar destfile="${validator-sources-jar}">
      <fileset dir="${src}"/>
    </jar>
  </target>
  <target name="validator-artifacts" depends="dl-deps-antlib, validator-jar, validator-javadoc-jar, validator-sources-jar">
    <delete file="${dist}/VERSION" />
    <artifact:pom
      id="pom"
      groupId="nu.validator"
      artifactId="validator"
      version="${version.number}"
      name="The Nu Html Checker"
      description="An HTML-checking library (used by https://checker.html5.org/ and https://html5.validator.nu)"
      url="https://validator.github.io/validator/"
      packaging="jar">
      <license
        name="The MIT License"
        distribution="repo"
        url="https://raw.githubusercontent.com/validator/validator/main/LICENSE"/>
      <scm
        connection="scm:git:git://github.com/validator/validator.git"
        developerConnection="scm:git:git://github.com/validator/validator.git"
        url="https://github.com/validator/validator"/>
      <issueManagement
        system="GitHub Issues"
        url="https://github.com/validator/validator/issues"/>
      <ciManagement
        system="GitHub Actions"
        url="https://github.com/validator/validator/actions"/>
      <developer
        name="Henri Sivonen"
        id="hsivonen"
        email="hsivonen@iki.fi"
        url="https://hsivonen.iki.fi/"/>
      <developer
        name="Michael[tm] Smith"
        id="sideshowbarker"
        email="mike@w3.org"
        url="https://people.w3.org/mike/"/>
      <dependency groupId="com.ibm.icu" artifactId="icu4j" version="${icu4j-version}"/>
      <dependency groupId="com.shapesecurity" artifactId="salvation" version="${salvation-version}"/>
      <dependency groupId="commons-codec" artifactId="commons-codec" version="${commons-codec-version}"/>
      <dependency groupId="org.apache.commons" artifactId="commons-fileupload2-core" version="${commons-fileupload-version}"/>
      <dependency groupId="org.apache.commons" artifactId="commons-fileupload2-jakarta-servlet5" version="${commons-fileupload-version}"/>
      <dependency groupId="commons-io" artifactId="commons-io" version="${commons-io-version}"/>
      <dependency groupId="commons-logging" artifactId="commons-logging" version="${commons-logging-version}"/>
      <dependency groupId="isorelax" artifactId="isorelax" version="20030108"/>
      <dependency groupId="org.eclipse.jetty.toolchain" artifactId="jetty-jakarta-servlet-api" version="${jakarta.servlet-api-version}"/>
      <dependency groupId="log4j" artifactId="log4j" version="${log4j-version}"/>
      <dependency groupId="net.sf.saxon" artifactId="Saxon-HE" version="9.6.0-4"/>
      <dependency groupId="nu.validator" artifactId="langdetect" version="1.2"/>
      <dependency groupId="nu.validator" artifactId="galimatias" version="0.1.3"/>
      <dependency groupId="nu.validator" artifactId="htmlparser" version="1.4.16"/>
      <dependency groupId="nu.validator" artifactId="cssvalidator" version="1.0.8"/>
      <dependency groupId="nu.validator" artifactId="jing" version="20200702VNU"/>
      <dependency groupId="org.apache.httpcomponents" artifactId="httpclient" version="${httpclient-version}"/>
      <dependency groupId="org.apache.httpcomponents" artifactId="httpcore" version="${httpcore-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-http" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-io" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-security" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-server" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-servlets" version="${jetty-version}"/>
      <dependency groupId="org.eclipse.jetty" artifactId="jetty-util" version="${jetty-version}"/>
      <dependency groupId="org.glassfish" artifactId="javax.json" version="${javax.json-version}"/>
    </artifact:pom>
    <artifact:writepom pomRefId="pom" file="${dist}/validator-${version.number}.pom"/>
    <jar destfile="${validator-jar}" duplicate="preserve">
      <zipfileset src="${jarsDir}/validator.jar"/>
      <manifest>
        <attribute name="Implementation-Title" value="The Nu Markup Checker (v.Nu)"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="http://validator.github.io/validator/"/>
      </manifest>
      <service type="org.relaxng.datatype.DatatypeLibraryFactory">
        <provider classname="com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl"/>
        <provider classname="nu.validator.datatype.Html5DatatypeLibraryFactory"/>
      </service>
    </jar>
  </target>
  <target name="validator-bundle" depends="validator-artifacts">
    <jar basedir="${dist}" destfile="${validator-bundle-jar}"/>
  </target>

  <import file=".ant/build-langdetect.xml"/>
  <import file=".ant/build-galimatias.xml"/>
  <import file=".ant/build-htmlparser.xml"/>
  <import file=".ant/build-cssvalidator.xml"/>
  <import file=".ant/build-jing.xml"/>

  <property name="python-executable" value="python3"/>
  <target name="dl-entities" unless="${offline}">
    <echo>Downloading local entities (this may take some time)</echo>
    <exec executable="${python-executable}" failonerror="true" failifexecutionfails="true">
      <env key="JAVA_HOME" value="${java.home}"/>
      <arg file="build/build.py"/>
      <arg value="dlentities"/> <!-- downloadLocalEntities() -->
    </exec>
  </target>

  <target name="schema-drivers-build">
    <exec executable="${python-executable}" failonerror="true" failifexecutionfails="true">
      <env key="JAVA_HOME" value="${java.home}"/>
      <arg file="build/build.py"/>
      <arg value="schema-drivers"/> <!-- buildSchemaDrivers() -->
    </exec>
  </target>

  <target name="localentities-build" depends="schema-drivers-build">
    <exec executable="${python-executable}" failonerror="true" failifexecutionfails="true">
      <env key="JAVA_HOME" value="${java.home}"/>
      <arg file="build/build.py"/>
      <arg value="localent"/> <!-- prepareLocalEntityJar() -->
    </exec>
  </target>
</project>
