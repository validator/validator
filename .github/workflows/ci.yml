name: CI build for vnu

on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java:
        - 8
        - 11
        - 13
        - 14-ea
        - 15-ea

    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v1.3.0
      with:
        java-version: ${{ matrix.java }}
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Update Submodules
      run: python ./checker.py update
    - name: Install Dependencies
      run: python ./checker.py dldeps
    - name: Build
      env:
        TOMCAT_VERSION: 8.5.29
      run: |
        curl -O https://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.zip
        unzip apache-tomcat-$TOMCAT_VERSION.zip
        chmod a+x apache-tomcat-$TOMCAT_VERSION/bin/*.sh
        python ./checker.py build
        python ./checker.py build
        python ./checker.py jar
        java -jar ./build/dist/vnu.jar ./build/dist/index.html
        java -jar ./build/dist/vnu.jar ./site/nu-about.html
        jar xf ./build/dist/vnu.jar && file nu/validator/client/SimpleCommandLineValidator.class | grep "version 52.0"
        python ./checker.py runtime-image
        python ./checker.py war
        jar xf ./build/dist-war/vnu.war && file WEB-INF/classes/nu/validator/servlet/VerifierServlet.class | grep "version 52.0"
        apache-tomcat-$TOMCAT_VERSION/bin/catalina.sh start
        cp ./build/dist-war/vnu.war apache-tomcat-$TOMCAT_VERSION/webapps/
        sleep 15s; tail apache-tomcat-$TOMCAT_VERSION/logs/catalina.out || true
        curl -sS 'http://localhost:8080/vnu/?out=gnu&doc=data:text/html;charset=utf-8,%3C%21doctype%20html%3E%3Cmeta%20charset%3Dutf-8%3E%3Ctitle%3ETest%3C%2Ftitle%3E' > RESULTS
        test -z "$(if [ -t RESULTS ]; then cat RESULTS | grep -v '^$'; fi)"
        if [ $? != 0 ]; then cat RESULTS; fi
        python ./checker.py check
        python ./checker.py test
    - uses: actions/upload-artifact@v1
      if: matrix.java == 11
      with:
        name: jar
        path: "build/dist/{*.jar*}"
    - uses: actions/upload-artifact@v1
      if: matrix.java == 11
      with:
        name: war
        path: "build/dist-war/{*.war*}"
    - uses: actions/upload-artifact@v1
      if: matrix.java == 11
      with:
        name: linux
        path: "build/dist/{*.zip*}"

  # windows:
  #   runs-on: windows-2016
  #   env:
  #     CHILD_CONCURRENCY: "1"
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: 10
  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: '2.x'
  #   - run: yarn --frozen-lockfile
  #     name: Install Dependencies
  #   - run: yarn electron
  #     name: Download Electron
  #   - run: yarn gulp hygiene
  #     name: Run Hygiene Checks
  #   - run: yarn monaco-compile-check
  #     name: Run Monaco Editor Checks
  #   - run: yarn valid-layers-check
  #     name: Run Valid Layers Checks
  #   - run: yarn compile
  #     name: Compile Sources
  #   - run: yarn download-builtin-extensions
  #     name: Download Built-in Extensions
  #   - run: .\scripts\test.bat --tfs "Unit Tests"
  #     name: Run Unit Tests (Electron)
  #   - run: yarn test-browser --browser chromium
  #     name: Run Unit Tests (Browser)
  #   - run: .\scripts\test-integration.bat --tfs "Integration Tests"
  #     name: Run Integration Tests (Electron)

  darwin:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Update Submodules
      run: python ./checker.py update
    - name: Install Dependencies
      run: python ./checker.py dldeps
    - name: Build
      env:
        TOMCAT_VERSION: 8.5.29
      run: |
        curl -O https://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.zip
        unzip apache-tomcat-$TOMCAT_VERSION.zip
        chmod a+x apache-tomcat-$TOMCAT_VERSION/bin/*.sh
        python ./checker.py build
        python ./checker.py build
        python ./checker.py jar
        java -jar ./build/dist/vnu.jar ./build/dist/index.html
        java -jar ./build/dist/vnu.jar ./site/nu-about.html
        jar xf ./build/dist/vnu.jar && file nu/validator/client/SimpleCommandLineValidator.class | grep "version 52.0"
        python ./checker.py runtime-image
        python ./checker.py war
        jar xf ./build/dist-war/vnu.war && file WEB-INF/classes/nu/validator/servlet/VerifierServlet.class | grep "version 52.0"
        apache-tomcat-$TOMCAT_VERSION/bin/catalina.sh start
        cp ./build/dist-war/vnu.war apache-tomcat-$TOMCAT_VERSION/webapps/
        sleep 15s; tail apache-tomcat-$TOMCAT_VERSION/logs/catalina.out || true
        curl -sS 'http://localhost:8080/vnu/?out=gnu&doc=data:text/html;charset=utf-8,%3C%21doctype%20html%3E%3Cmeta%20charset%3Dutf-8%3E%3Ctitle%3ETest%3C%2Ftitle%3E' > RESULTS
        test -z "$(if [ -t RESULTS ]; then cat RESULTS | grep -v '^$'; fi)"
        if [ $? != 0 ]; then cat RESULTS; fi
        python ./checker.py check
        python ./checker.py test
